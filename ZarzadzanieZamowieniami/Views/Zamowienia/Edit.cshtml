@model ZarzadzanieZamowieniami.Models.Zamowienie
@{
    ViewData["Title"] = "Edytuj Zamówienie";
}

<h1>Edytuj Zamówienie</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label>Data złożenia:</label>
        <input asp-for="DataZlozenia" class="form-control" type="datetime-local" />
        <span asp-validation-for="DataZlozenia" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Status:</label>
        <input asp-for="Status" class="form-control" />
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label>Klient:</label>
        <select asp-for="KlientId" class="form-control" asp-items="ViewBag.KlientId"></select>
        <span asp-validation-for="KlientId" class="text-danger"></span>
    </div>

    <h3>Pozycje zamówienia:</h3>
<table class="table">
    <thead>
        <tr>
            <th>Produkt</th>
            <th>Ilość</th>
            <th>Cena</th>
            <th>Akcje</th>
        </tr>
    </thead>
        <tbody id="pozycje-zamowienia">
            @if (Model.PozycjeZamowienia != null && Model.PozycjeZamowienia.Any())
            {
                for (int i = 0; i < Model.PozycjeZamowienia.Count; i++)
                {
                    <tr>
                        <td>
                            <select name="PozycjeZamowienia[@i].ProduktId" class="form-control" asp-for="PozycjeZamowienia[@i].ProduktId" asp-items="ViewBag.Produkty"></select>
                        </td>
                        <td>
                            <input name="PozycjeZamowienia[@i].Ilosc" class="form-control" type="number" value="@Model.PozycjeZamowienia[i].Ilosc" min="1" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="usunPozycje(this)">Usuń</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center">Brak pozycji w zamówieniu</td>
                </tr>
            }
        </tbody>

</table>

    <button type="button" class="btn btn-secondary" onclick="dodajPozycje()">Dodaj pozycję</button>

    <div class="form-group mt-3">
        <input type="submit" value="Zapisz zmiany" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index" class="btn btn-secondary">Powrót do listy</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        function dodajPozycje() {
            const tbody = document.getElementById('pozycje-zamowienia');
            const rowIndex = tbody.children.length;

            // Pobierz opcje produktów jako JSON
            const produktySelect = @Html.Raw(Json.Serialize(ViewBag.Produkty));

            if (!produktySelect || produktySelect.length === 0) {
                alert("Nie można dodać pozycji - lista produktów jest pusta.");
                return;
            }

            const row = document.createElement('tr');
            row.innerHTML = `
                <td>
                    <select name="PozycjeZamowienia[${rowIndex}].ProduktId" class="form-control">
                        ${produktySelect.map(p => `<option value="${p.value}">${p.text}</option>`).join('')}
                    </select>
                </td>
                <td>
                    <input name="PozycjeZamowienia[${rowIndex}].Ilosc" class="form-control" type="number" placeholder="Ilość" min="1" />
                </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="usunPozycje(this)">Usuń</button>
                </td>
            `;
            tbody.appendChild(row);
        }

        function usunPozycje(button) {
            const row = button.closest('tr');
            row.remove();
        }
    </script>

}
