// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZarzadzanieZamowieniami;

#nullable disable

namespace ZarzadzanieZamowieniami.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Klient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.PozycjaZamowienia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ilosc")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProduktId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZamowienieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.HasIndex("ZamowienieId");

                    b.ToTable("PozycjeZamowienia");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cena")
                        .HasColumnType("TEXT");

                    b.Property<string>("KodKreskowy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Lokalizacja")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StanMagazynowy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Zamowienie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataZlozenia")
                        .HasColumnType("TEXT");

                    b.Property<int>("KlientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.ToTable("Zamowienia");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.PozycjaZamowienia", b =>
                {
                    b.HasOne("ZarzadzanieZamowieniami.Models.Produkt", "Produkt")
                        .WithMany("PozycjeZamowienia")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZarzadzanieZamowieniami.Models.Zamowienie", "Zamowienie")
                        .WithMany("PozycjeZamowienia")
                        .HasForeignKey("ZamowienieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");

                    b.Navigation("Zamowienie");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Zamowienie", b =>
                {
                    b.HasOne("ZarzadzanieZamowieniami.Models.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Klient", b =>
                {
                    b.Navigation("Zamowienia");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Produkt", b =>
                {
                    b.Navigation("PozycjeZamowienia");
                });

            modelBuilder.Entity("ZarzadzanieZamowieniami.Models.Zamowienie", b =>
                {
                    b.Navigation("PozycjeZamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
